$maxWidth: 1920;
$maxWidthContainer: 1160;

@mixin adaptive ($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;
  @if $type==1 {
    // Только если меньше контейнера
    #{$property}: $startSize + px;
    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
  } @else if $type==2 {
    // Только если больше контейнера 
    #{$property}: $startSize + px;
    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
  } @else {
    // Всегда
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
  }
}

@mixin adaptiv-font($pcSize, $mobSize) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;
  @media (max-width: 767px) {
    font-size: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidth}));
  }
  @media (min-width: 767px) {
    font-size: calc(#{$mobSize + px} + #{$addSize} * (100vw / #{$maxWidth}));
  }
}

.police-terms-cockie {
  position: relative;
  z-index: 2;
  @include adaptive ("padding-top", 100, 50, 0);
  @include adaptive ("padding-bottom", 100, 50, 0);
  overflow: hidden;
  & h1 {
    @include adaptive ("margin-bottom", 60, 30, 0);
    color: var(--white);
  }

  & h2 {
    margin-bottom: 30px;
    color: var(--white);
  }

  & p {
    color: var(--white);
  }

  & p:not(:last-child) {
    margin-bottom: 30px;
  }

  & ul:not(:last-child) {
    margin-bottom: 30px;
  }

  & li { 
    @include adaptiv-font(15, 13);
    @include adaptive ("line-height", 23, 21, 0);
    font-weight: 300;
    color: var(--white);
  }

  & li:not(:last-child) {
    margin-bottom: 30px;
  }
}