$maxWidth: 1920;
$maxWidthContainer: 1160;

@mixin adaptive ($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;
  @if $type==1 {
    // Только если меньше контейнера
    #{$property}: $startSize + px;
    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
  } @else if $type==2 {
    // Только если больше контейнера 
    #{$property}: $startSize + px;
    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
  } @else {
    // Всегда
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
  }
}

@mixin adaptiv-font($pcSize, $mobSize) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;
  @media (max-width: 767px) {
    font-size: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidth}));
  }
  @media (min-width: 767px) {
    font-size: calc(#{$mobSize + px} + #{$addSize} * (100vw / #{$maxWidth}));
  }
}

.benefits {
  @include adaptive ("padding-top", 100, 50, 0);
  @include adaptive ("padding-bottom", 100, 50, 0);
  background-image: url(../../img/benefits.png);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  border-bottom: 2px solid var(--black);

  &__title {
    @include adaptive ("margin-bottom", 60, 30, 0);
    text-align: center;
    color: var(--white);
  }

  &__list {
    display: grid;
    grid-template: auto / repeat(3,1fr);
    gap: 60px 30px;
    @media (max-width: 900px) {
      grid-template-columns: repeat(2,1fr);
    }
    @media (max-width: 600px) {
      grid-template-columns: 1fr;
    }
  }

  &__item {
    @include adaptiv-font(20, 16);
    @include adaptive ("line-height", 28, 24, 0);
    padding: 60px 15px;
    font-weight: 400;
    color: var(--white);
    border: 2px solid var(--indigo);
    text-align: center;
    border-radius: 15px;
  }
}
