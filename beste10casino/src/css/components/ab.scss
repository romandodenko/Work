$maxWidth: 1920;
$maxWidthContainer: 1440;

@mixin adaptive ($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;

  @if $type==1 {
    // Только если меньше контейнера
    #{$property}: $startSize + px;

    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
  }

  @else if $type==2 {
    // Только если больше контейнера 
    #{$property}: $startSize + px;

    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
  }

  @else {
    // Всегда
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
  }
}

@mixin adaptiv-font($pcSize, $mobSize) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;

  @media (max-width: 767px) {
    font-size: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidth}));
  }

  @media (min-width: 767px) {
    font-size: calc(#{$mobSize + px} + #{$addSize} * (100vw / #{$maxWidth}));
  }
}

.ab {
  @include adaptive ("padding-top", 90, 40, 0);
  @include adaptive ("padding-bottom", 40, 20, 0);
  overflow: hidden;

  &__body {
    background: linear-gradient(279.61deg, rgba(173, 52, 33, 0.51) 0%, rgba(58, 13, 6, 0.65) 99.26%);
    border-radius: 26px;
    @include adaptive ("padding-top", 35, 15, 0);
    @include adaptive ("padding-left", 35, 15, 0);
    max-width: 1164px;
    margin: 0 auto;
    overflow: hidden;
    padding-right: 0;
  }

  &__container {
    @media (max-width: 600px) {
      padding: 0 20px;
    }
  }

  &__descr {
    width: 60%;
    @include adaptive ("padding-bottom", 35, 15, 0);

    @media (max-width: 991px) {
      width: 100%;
      @include adaptive ("padding-right", 35, 15, 0);
    }
  }

  &__title {
    margin-bottom: 30px;
    text-indent: 30px;

    @media (max-width: 1024px) {
      text-indent: 0;
    }
  }

  &__text {
    margin-bottom: 30px;
  }

  &__wrapper-link {
    text-align: end;
  }

  &__bottom {
  }

  &__wrapper-text {
    width: 48%;
    @media (max-width: 991px) {
      width: 100%;
    }
  }

  &__wrapper-text:not(:last-child) {
    margin-right: 30px;
    @media (max-width: 991px) {
      margin-bottom: 30px;
      margin-right: 0;
    }
  }


  &__link {
    display: inline-flex;
    align-items: center;
    transition: transform .2s ease-in-out;
    color: #C9C9C9;

    & img {
      margin-top: 2px;
      margin-left: 5px;
    }

    &:hover {
      color: #C9C9C9;
    }
  }

  &__image {
    width: 41%;
    text-align: right;
    margin-bottom: -2px;

    & img {
      max-width: 100%;
      height: 100%;
      border-radius: 0 0 26px 0;
    }

    @media (max-width: 991px) {
      width: 100%;
    }

    @media (max-width: 600px) {
      margin-right: -5px;
      margin-bottom: -4px;
    }
  }
}

.ab-hd {
  background-color: #1C1F2D;
}

.ab-bg {
  height: 100%;
  @include adaptive ("padding-top", 200, 70, 0);
  @include adaptive ("padding-bottom", 100, 50, 0);
  background-image: url(../../img/uber-bg.png);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;

  @media (max-width: 1024px) {
    background-image: url(../../img/uber-bg_1024.png);
  }

  @media (max-width: 600px) {
    background-image: url(../../img/uber-bg_320.png);
  }
}

.ab-body {
  max-width: 100%;
  background: transparent;
  padding-right: calc(var(--bs-gutter-x) * .5);
  padding-left: calc(var(--bs-gutter-x) * .5);
  border-radius: 0;
}

.ab-container {
  height: 100%;
}

.ab-text {
  margin-bottom: 0;
}

.ab-title {
  text-indent: 0;
}

