$maxWidth: 1920;
$maxWidthContainer: 1260;

@mixin adaptive ($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;

  @if $type==1 {
    // Только если меньше контейнера
    #{$property}: $startSize + px;

    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
  }

  @else if $type==2 {
    // Только если больше контейнера 
    #{$property}: $startSize + px;

    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
  }

  @else {
    // Всегда
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
  }
}

@mixin adaptiv-font($pcSize, $mobSize) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;

  @media (max-width: 767px) {
    font-size: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidth}));
  }

  @media (min-width: 767px) {
    font-size: calc(#{$mobSize + px} + #{$addSize} * (100vw / #{$maxWidth}));
  }
}
.faq {
  @include adaptive ("padding-top", 100, 50, 0);
  @include adaptive ("padding-bottom", 100, 50, 0);

  &__container {
  }

  &__title {
    @include adaptive ("margin-bottom", 60, 30, 0);
  }

  &__item {
    margin-bottom: 10px;
  }

  &__btn {
    width: 100%;
    @include adaptive ("padding-top", 15, 7, 0);
    @include adaptive ("padding-bottom", 15, 7, 0);
    @include adaptive ("padding-right", 25, 13, 0);
    @include adaptive ("padding-left", 25, 13, 0);
    @include adaptiv-font(30, 20);
    @include adaptive ("line-height", 40, 30, 0);
    font-weight: 700;
    color: var(--black);
    border: 2px solid var(--black);
    background-color: transparent;
    text-align: left;
    transition: border-color .2s ease-in-out, color .2s ease-in-out;
  }

  &__text {
    padding: 0 5px;
    @include adaptive ("padding-top", 25, 10, 0);
    @include adaptive ("padding-bottom", 25, 10, 0);
    text-align: left;
  }

  &__link {
    color: var(--black);
    transition: color .2s ease-in-out;
    &:active {
      color: var(--active);
    }
  }

}

._active {
  color: var(--white);
  border-color: var(--white);
}