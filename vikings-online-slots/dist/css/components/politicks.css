.politicks {
  margin-top: 150px;
  margin-bottom: calc(30px + 30 * ((100vw - 320px) / 1600));
}
@media (max-width: 1024px) {
  .politicks {
    margin-top: 120px;
  }
}
@media (max-width: 768px) {
  .politicks {
    margin-top: calc(70px + 50 * ((100vw - 320px) / 1600));
  }
}
.politicks h1 {
  font-style: normal;
  font-weight: 400;
  line-height: calc(32px + 20 * ((100vw - 320px) / 1600));
  text-transform: uppercase;
  color: #D93223;
  margin-bottom: 30px;
}
@media (max-width: 767px) {
  .politicks h1 {
    font-size: calc(22px + 34 * ((100vw - 320px) / 1920));
  }
}
@media (min-width: 767px) {
  .politicks h1 {
    font-size: calc(22px + 20 * (100vw / 1920));
  }
}
.politicks h2 {
  font-style: normal;
  font-weight: 400;
  line-height: calc(32px + 10 * ((100vw - 320px) / 1600));
  text-transform: uppercase;
  color: #D93223;
  margin-bottom: 30px;
}
@media (max-width: 767px) {
  .politicks h2 {
    font-size: calc(22px + 17 * ((100vw - 320px) / 1920));
  }
}
@media (min-width: 767px) {
  .politicks h2 {
    font-size: calc(22px + 10 * (100vw / 1920));
  }
}
.politicks p {
  font-style: normal;
  font-weight: 400;
  line-height: calc(28px + 4 * ((100vw - 320px) / 1600));
  color: var(--black);
}
@media (max-width: 767px) {
  .politicks p {
    font-size: calc(18px + 6.8 * ((100vw - 320px) / 1920));
  }
}
@media (min-width: 767px) {
  .politicks p {
    font-size: calc(18px + 4 * (100vw / 1920));
  }
}
.politicks p:not(:last-child) {
  margin-bottom: 30px;
}
.politicks ul:not(:last-child) {
  margin-bottom: 30px;
}
.politicks li {
  font-style: normal;
  font-weight: 400;
  line-height: calc(26px + 2 * ((100vw - 320px) / 1600));
  color: var(--black);
}
@media (max-width: 767px) {
  .politicks li {
    font-size: calc(16px + 3.4 * ((100vw - 320px) / 1920));
  }
}
@media (min-width: 767px) {
  .politicks li {
    font-size: calc(16px + 2 * (100vw / 1920));
  }
}
.politicks li:not(:last-child) {
  margin-bottom: 30px;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvcG9saXRpY2tzLnNjc3MiLCJjb21wb25lbnRzL3BvbGl0aWNrcy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0NBO0VBQ0UsaUJBQUE7RUFoQkUseURBQUE7QUNoQko7QURpQ0U7RUFGRjtJQUdJLGlCQUFBO0VDOUJGO0FBQ0Y7QUQrQkU7RUFMRjtJQWZJLHNEQUFBO0VDUEY7QUFDRjtBRDhCRTtFQUNFLGtCQUFBO0VBQ0EsZ0JBQUE7RUExQkEsdURBQUE7RUE2QkEseUJBQUE7RUFDQSxjQUFBO0VBQ0EsbUJBQUE7QUM3Qko7QURLRTtFQWlCQTtJQWhCRSxxREFBQTtFQ0ZGO0FBQ0Y7QURHRTtFQWNBO0lBYkUsMkNBQUE7RUNBRjtBQUNGO0FEcUJFO0VBQ0Usa0JBQUE7RUFDQSxnQkFBQTtFQW5DQSx1REFBQTtFQXNDQSx5QkFBQTtFQUNBLGNBQUE7RUFDQSxtQkFBQTtBQ3BCSjtBRGJFO0VBMEJBO0lBekJFLHFEQUFBO0VDZ0JGO0FBQ0Y7QURmRTtFQXVCQTtJQXRCRSwyQ0FBQTtFQ2tCRjtBQUNGO0FEYUU7RUFDRSxrQkFBQTtFQUNBLGdCQUFBO0VBN0NBLHNEQUFBO0VBZ0RBLG1CQUFBO0FDWko7QUQ3QkU7RUFvQ0E7SUFuQ0Usc0RBQUE7RUNnQ0Y7QUFDRjtBRC9CRTtFQWlDQTtJQWhDRSwwQ0FBQTtFQ2tDRjtBQUNGO0FER0k7RUFDRSxtQkFBQTtBQ0ROO0FETUk7RUFDRSxtQkFBQTtBQ0pOO0FEUUU7RUFDRSxrQkFBQTtFQUNBLGdCQUFBO0VBOURBLHNEQUFBO0VBaUVBLG1CQUFBO0FDUEo7QURuREU7RUFxREE7SUFwREUsc0RBQUE7RUNzREY7QUFDRjtBRHJERTtFQWtEQTtJQWpERSwwQ0FBQTtFQ3dERjtBQUNGO0FERkk7RUFDRSxtQkFBQTtBQ0lOIiwiZmlsZSI6ImNvbXBvbmVudHMvcG9saXRpY2tzLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiRtYXhXaWR0aDogMTkyMDtcclxuJG1heFdpZHRoQ29udGFpbmVyOiAxNDQwO1xyXG5cclxuQG1peGluIGFkYXB0aXZlICgkcHJvcGVydHksICRzdGFydFNpemUsICRtaW5TaXplLCAkdHlwZSkge1xyXG4gICRhZGRTaXplOiAkc3RhcnRTaXplIC0gJG1pblNpemU7XHJcbiAgQGlmICR0eXBlPT0xIHtcclxuICAgIC8vINCi0L7Qu9GM0LrQviDQtdGB0LvQuCDQvNC10L3RjNGI0LUg0LrQvtC90YLQtdC50L3QtdGA0LBcclxuICAgICN7JHByb3BlcnR5fTogJHN0YXJ0U2l6ZSArIHB4O1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6ICN7JG1heFdpZHRoQ29udGFpbmVyICsgcHh9KSB7XHJcbiAgICAgICN7JHByb3BlcnR5fTogY2FsYygjeyRtaW5TaXplICsgcHh9ICsgI3skYWRkU2l6ZX0gKiAoKDEwMHZ3IC0gMzIwcHgpIC8gI3skbWF4V2lkdGhDb250YWluZXIgLSAzMjB9KSk7XHJcbiAgICB9XHJcbiAgfSBAZWxzZSBpZiAkdHlwZT09MiB7XHJcbiAgICAvLyDQotC+0LvRjNC60L4g0LXRgdC70Lgg0LHQvtC70YzRiNC1INC60L7QvdGC0LXQudC90LXRgNCwIFxyXG4gICAgI3skcHJvcGVydHl9OiAkc3RhcnRTaXplICsgcHg7XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogI3skbWF4V2lkdGhDb250YWluZXIgKyBweH0pIHtcclxuICAgICAgI3skcHJvcGVydHl9OiBjYWxjKCN7JG1pblNpemUgKyBweH0gKyAjeyRhZGRTaXplfSAqICgoMTAwdncgLSAzMjBweCkgLyAjeyRtYXhXaWR0aCAtIDMyMH0pKTtcclxuICAgIH1cclxuICB9IEBlbHNlIHtcclxuICAgIC8vINCS0YHQtdCz0LTQsFxyXG4gICAgI3skcHJvcGVydHl9OiBjYWxjKCN7JG1pblNpemUgKyBweH0gKyAjeyRhZGRTaXplfSAqICgoMTAwdncgLSAzMjBweCkgLyAjeyRtYXhXaWR0aCAtIDMyMH0pKTtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBhZGFwdGl2LWZvbnQoJHBjU2l6ZSwgJG1vYlNpemUpIHtcclxuICAkYWRkU2l6ZTogJHBjU2l6ZSAtICRtb2JTaXplO1xyXG4gICRhZGRNb2JTaXplOiAkYWRkU2l6ZSArICRhZGRTaXplICogMC43O1xyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xyXG4gICAgZm9udC1zaXplOiBjYWxjKCN7JG1vYlNpemUgKyBweH0gKyAjeyRhZGRNb2JTaXplfSAqICgoMTAwdncgLSAzMjBweCkgLyAjeyRtYXhXaWR0aH0pKTtcclxuICB9XHJcbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XHJcbiAgICBmb250LXNpemU6IGNhbGMoI3skbW9iU2l6ZSArIHB4fSArICN7JGFkZFNpemV9ICogKDEwMHZ3IC8gI3skbWF4V2lkdGh9KSk7XHJcbiAgfVxyXG59XHJcblxyXG4ucG9saXRpY2tzIHtcclxuICBtYXJnaW4tdG9wOiAxNTBweDtcclxuICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMjBweDtcclxuICB9XHJcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICBAaW5jbHVkZSBhZGFwdGl2ZSAoXCJtYXJnaW4tdG9wXCIsIDEyMCwgNzAsIDApO1xyXG4gIH1cclxuICBAaW5jbHVkZSBhZGFwdGl2ZSAoXCJtYXJnaW4tYm90dG9tXCIsIDYwLCAzMCwgMCk7XHJcbiAgJiBoMSB7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgQGluY2x1ZGUgYWRhcHRpdi1mb250KDQyLCAyMik7XHJcbiAgICBAaW5jbHVkZSBhZGFwdGl2ZSAoXCJsaW5lLWhlaWdodFwiLCA1MiwgMzIsIDApO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGNvbG9yOiAjRDkzMjIzO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuICB9XHJcbiAgJiBoMiB7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgQGluY2x1ZGUgYWRhcHRpdi1mb250KDMyLCAyMik7XHJcbiAgICBAaW5jbHVkZSBhZGFwdGl2ZSAoXCJsaW5lLWhlaWdodFwiLCA0MiwgMzIsIDApO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGNvbG9yOiAjRDkzMjIzO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuICB9XHJcblxyXG4gICYgcHtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBAaW5jbHVkZSBhZGFwdGl2LWZvbnQoMjIsIDE4KTtcclxuICAgIEBpbmNsdWRlIGFkYXB0aXZlIChcImxpbmUtaGVpZ2h0XCIsIDMyLCAyOCwgMCk7XHJcbiAgICBjb2xvcjogdmFyKC0tYmxhY2spO1xyXG4gICAgJjpub3QoOmxhc3QtY2hpbGQpIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICYgdWwge1xyXG4gICAgJjpub3QoOmxhc3QtY2hpbGQpIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICYgbGkge1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIEBpbmNsdWRlIGFkYXB0aXYtZm9udCgxOCwgMTYpO1xyXG4gICAgQGluY2x1ZGUgYWRhcHRpdmUgKFwibGluZS1oZWlnaHRcIiwgMjgsIDI2LCAwKTtcclxuICAgIGNvbG9yOiB2YXIoLS1ibGFjayk7XHJcbiAgICAmOm5vdCg6bGFzdC1jaGlsZCkge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG4gICAgfVxyXG4gIH1cclxufSIsIi5wb2xpdGlja3Mge1xuICBtYXJnaW4tdG9wOiAxNTBweDtcbiAgbWFyZ2luLWJvdHRvbTogY2FsYygzMHB4ICsgMzAgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gMTYwMCkpO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAucG9saXRpY2tzIHtcbiAgICBtYXJnaW4tdG9wOiAxMjBweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5wb2xpdGlja3Mge1xuICAgIG1hcmdpbi10b3A6IGNhbGMoNzBweCArIDUwICogKCgxMDB2dyAtIDMyMHB4KSAvIDE2MDApKTtcbiAgfVxufVxuLnBvbGl0aWNrcyBoMSB7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IGNhbGMoMzJweCArIDIwICogKCgxMDB2dyAtIDMyMHB4KSAvIDE2MDApKTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6ICNEOTMyMjM7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLnBvbGl0aWNrcyBoMSB7XG4gICAgZm9udC1zaXplOiBjYWxjKDIycHggKyAzNCAqICgoMTAwdncgLSAzMjBweCkgLyAxOTIwKSk7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjdweCkge1xuICAucG9saXRpY2tzIGgxIHtcbiAgICBmb250LXNpemU6IGNhbGMoMjJweCArIDIwICogKDEwMHZ3IC8gMTkyMCkpO1xuICB9XG59XG4ucG9saXRpY2tzIGgyIHtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogY2FsYygzMnB4ICsgMTAgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gMTYwMCkpO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogI0Q5MzIyMztcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAucG9saXRpY2tzIGgyIHtcbiAgICBmb250LXNpemU6IGNhbGMoMjJweCArIDE3ICogKCgxMDB2dyAtIDMyMHB4KSAvIDE5MjApKTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2N3B4KSB7XG4gIC5wb2xpdGlja3MgaDIge1xuICAgIGZvbnQtc2l6ZTogY2FsYygyMnB4ICsgMTAgKiAoMTAwdncgLyAxOTIwKSk7XG4gIH1cbn1cbi5wb2xpdGlja3MgcCB7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IGNhbGMoMjhweCArIDQgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gMTYwMCkpO1xuICBjb2xvcjogdmFyKC0tYmxhY2spO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5wb2xpdGlja3MgcCB7XG4gICAgZm9udC1zaXplOiBjYWxjKDE4cHggKyA2LjggKiAoKDEwMHZ3IC0gMzIwcHgpIC8gMTkyMCkpO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgLnBvbGl0aWNrcyBwIHtcbiAgICBmb250LXNpemU6IGNhbGMoMThweCArIDQgKiAoMTAwdncgLyAxOTIwKSk7XG4gIH1cbn1cbi5wb2xpdGlja3MgcDpub3QoOmxhc3QtY2hpbGQpIHtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbn1cbi5wb2xpdGlja3MgdWw6bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG4ucG9saXRpY2tzIGxpIHtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogY2FsYygyNnB4ICsgMiAqICgoMTAwdncgLSAzMjBweCkgLyAxNjAwKSk7XG4gIGNvbG9yOiB2YXIoLS1ibGFjayk7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLnBvbGl0aWNrcyBsaSB7XG4gICAgZm9udC1zaXplOiBjYWxjKDE2cHggKyAzLjQgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gMTkyMCkpO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY3cHgpIHtcbiAgLnBvbGl0aWNrcyBsaSB7XG4gICAgZm9udC1zaXplOiBjYWxjKDE2cHggKyAyICogKDEwMHZ3IC8gMTkyMCkpO1xuICB9XG59XG4ucG9saXRpY2tzIGxpOm5vdCg6bGFzdC1jaGlsZCkge1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xufSJdfQ== */
