$maxWidth: 1920;
$maxWidthContainer: 1320;

@mixin adaptive ($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;

  @if $type==1 {
    // Только если меньше контейнера
    #{$property}: $startSize + px;

    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
  }

  @else if $type==2 {
    // Только если больше контейнера 
    #{$property}: $startSize + px;

    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
  }

  @else {
    // Всегда
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
  }
}

@mixin adaptiv-font($pcSize, $mobSize) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;

  @media (max-width: 767px) {
    font-size: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidth}));
  }

  @media (min-width: 767px) {
    font-size: calc(#{$mobSize + px} + #{$addSize} * (100vw / #{$maxWidth}));
  }
}

.reg {
  @include adaptive ("padding-top", 150, 100, 0);
  @include adaptive ("padding-bottom", 100, 50, 0);
  background-color: #EEE8AA;
  height: 100%;

  &__container {
    height: 100%;
  }

  &__label {
    display: flex;
    flex-direction: column;
  }

  &__label:not(:last-child) {
    margin-bottom: 30px;
  }

  &__input {
    @include adaptiv-font(18, 16);
    @include adaptive ("line-height", 28, 26, 0);
    font-weight: 400;
    color: var(--black);
    border: 3px solid #808000;
    height: 60px;
    padding: 0 15px;
    background-color: transparent;
    transition: border-radius .4s ease-in-out;
    &::placeholder {
      @include adaptiv-font(18, 16);
      @include adaptive ("line-height", 28, 26, 0);
      font-weight: 400;
      color: var(--black);
      padding: 3px 0;
    }
    &:active {
      border-radius: 100px;
    }
  }

  &__input:not(:last-child) {
    margin-bottom: 30px;
  }
  &__btn {
    @include adaptiv-font(16, 14);
    @include adaptive ("line-height", 26, 24, 0);
    font-weight: 400;
    color: var(--white);
    @include adaptive ("padding-top", 10, 5, 0);
    @include adaptive ("padding-bottom", 10, 5, 0);
    @include adaptive ("padding-left", 35, 5, 0);
    @include adaptive ("padding-right", 35, 5, 0);
    background-color: #808000;
    border-radius: 100px;
    cursor: pointer;
    transition: transform .2s ease-in-out, background-color .2s ease-in-out;
    &:focus-visible {
      transform: translateY(3px);
      background-color: transparent;
    }
  }
}

.log {

  @include adaptive ("padding-top", 150, 100, 0);
  @include adaptive ("padding-bottom", 100, 50, 0);
  background-color: #EEE8AA;
  height: 100%;

  &__container {
    height: 100%;
  }

  &__label {
    display: flex;
    flex-direction: column;
  }

  &__label:not(:last-child) {
    margin-bottom: 30px;
  }

  &__input {
    @include adaptiv-font(18, 16);
    @include adaptive ("line-height", 28, 26, 0);
    font-weight: 400;
    color: var(--black);
    border: 3px solid #808000;
    height: 60px;
    padding: 0 15px;
    background-color: transparent;
    transition: border-radius .4s ease-in-out;
    &::placeholder {
      @include adaptiv-font(18, 16);
      @include adaptive ("line-height", 28, 26, 0);
      font-weight: 400;
      color: var(--black);
      padding: 3px 0;
    }
    &:focus-visible {
      border-radius: 100px;
    }
  }

  &__input:not(:last-child) {
    margin-bottom: 30px;
  }
  &__btn {
    @include adaptiv-font(16, 14);
    @include adaptive ("line-height", 26, 24, 0);
    font-weight: 400;
    color: var(--white);
    @include adaptive ("padding-top", 10, 5, 0);
    @include adaptive ("padding-bottom", 10, 5, 0);
    @include adaptive ("padding-left", 35, 5, 0);
    @include adaptive ("padding-right", 35, 5, 0);
    background-color: #808000;
    border-radius: 100px;
    cursor: pointer;
    transition: transform .2s ease-in-out, background-color .2s ease-in-out;
    &:active {
      transform: translateY(3px);
      background-color: transparent;
    }
  }
}